// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ScatterSample.proto

#include "ScatterSample.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_Vector_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Vector_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vector3;
}  // namespace protobuf_Vector_2eproto
namespace Persistance {
class ScatterSampleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScatterSample>
      _instance;
} _ScatterSample_default_instance_;
}  // namespace Persistance
namespace protobuf_ScatterSample_2eproto {
static void InitDefaultsScatterSample() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Persistance::_ScatterSample_default_instance_;
    new (ptr) ::Persistance::ScatterSample();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Persistance::ScatterSample::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ScatterSample =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsScatterSample}, {
      &protobuf_Vector_2eproto::scc_info_Vector3.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ScatterSample.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Persistance::ScatterSample, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Persistance::ScatterSample, scene_setup_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Persistance::ScatterSample, point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Persistance::ScatterSample, view_direction_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Persistance::ScatterSample)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Persistance::_ScatterSample_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ScatterSample.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023ScatterSample.proto\022\013Persistance\032\014Vect"
      "or.proto\"z\n\rScatterSample\022\026\n\016scene_setup"
      "_id\030\001 \001(\005\022#\n\005point\030\002 \001(\0132\024.Persistance.V"
      "ector3\022,\n\016view_direction\030\003 \001(\0132\024.Persist"
      "ance.Vector3b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 180);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ScatterSample.proto", &protobuf_RegisterTypes);
  ::protobuf_Vector_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ScatterSample_2eproto
namespace Persistance {

// ===================================================================

void ScatterSample::InitAsDefaultInstance() {
  ::Persistance::_ScatterSample_default_instance_._instance.get_mutable()->point_ = const_cast< ::Persistance::Vector3*>(
      ::Persistance::Vector3::internal_default_instance());
  ::Persistance::_ScatterSample_default_instance_._instance.get_mutable()->view_direction_ = const_cast< ::Persistance::Vector3*>(
      ::Persistance::Vector3::internal_default_instance());
}
void ScatterSample::clear_point() {
  if (GetArenaNoVirtual() == NULL && point_ != NULL) {
    delete point_;
  }
  point_ = NULL;
}
void ScatterSample::clear_view_direction() {
  if (GetArenaNoVirtual() == NULL && view_direction_ != NULL) {
    delete view_direction_;
  }
  view_direction_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScatterSample::kSceneSetupIdFieldNumber;
const int ScatterSample::kPointFieldNumber;
const int ScatterSample::kViewDirectionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScatterSample::ScatterSample()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ScatterSample_2eproto::scc_info_ScatterSample.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Persistance.ScatterSample)
}
ScatterSample::ScatterSample(const ScatterSample& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_point()) {
    point_ = new ::Persistance::Vector3(*from.point_);
  } else {
    point_ = NULL;
  }
  if (from.has_view_direction()) {
    view_direction_ = new ::Persistance::Vector3(*from.view_direction_);
  } else {
    view_direction_ = NULL;
  }
  scene_setup_id_ = from.scene_setup_id_;
  // @@protoc_insertion_point(copy_constructor:Persistance.ScatterSample)
}

void ScatterSample::SharedCtor() {
  ::memset(&point_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scene_setup_id_) -
      reinterpret_cast<char*>(&point_)) + sizeof(scene_setup_id_));
}

ScatterSample::~ScatterSample() {
  // @@protoc_insertion_point(destructor:Persistance.ScatterSample)
  SharedDtor();
}

void ScatterSample::SharedDtor() {
  if (this != internal_default_instance()) delete point_;
  if (this != internal_default_instance()) delete view_direction_;
}

void ScatterSample::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScatterSample::descriptor() {
  ::protobuf_ScatterSample_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ScatterSample_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScatterSample& ScatterSample::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ScatterSample_2eproto::scc_info_ScatterSample.base);
  return *internal_default_instance();
}


void ScatterSample::Clear() {
// @@protoc_insertion_point(message_clear_start:Persistance.ScatterSample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && point_ != NULL) {
    delete point_;
  }
  point_ = NULL;
  if (GetArenaNoVirtual() == NULL && view_direction_ != NULL) {
    delete view_direction_;
  }
  view_direction_ = NULL;
  scene_setup_id_ = 0;
  _internal_metadata_.Clear();
}

bool ScatterSample::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Persistance.ScatterSample)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 scene_setup_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_setup_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Persistance.Vector3 point = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Persistance.Vector3 view_direction = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_view_direction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Persistance.ScatterSample)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Persistance.ScatterSample)
  return false;
#undef DO_
}

void ScatterSample::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Persistance.ScatterSample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 scene_setup_id = 1;
  if (this->scene_setup_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->scene_setup_id(), output);
  }

  // .Persistance.Vector3 point = 2;
  if (this->has_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_point(), output);
  }

  // .Persistance.Vector3 view_direction = 3;
  if (this->has_view_direction()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_view_direction(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Persistance.ScatterSample)
}

::google::protobuf::uint8* ScatterSample::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Persistance.ScatterSample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 scene_setup_id = 1;
  if (this->scene_setup_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->scene_setup_id(), target);
  }

  // .Persistance.Vector3 point = 2;
  if (this->has_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_point(), deterministic, target);
  }

  // .Persistance.Vector3 view_direction = 3;
  if (this->has_view_direction()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_view_direction(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Persistance.ScatterSample)
  return target;
}

size_t ScatterSample::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Persistance.ScatterSample)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Persistance.Vector3 point = 2;
  if (this->has_point()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *point_);
  }

  // .Persistance.Vector3 view_direction = 3;
  if (this->has_view_direction()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *view_direction_);
  }

  // int32 scene_setup_id = 1;
  if (this->scene_setup_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->scene_setup_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScatterSample::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Persistance.ScatterSample)
  GOOGLE_DCHECK_NE(&from, this);
  const ScatterSample* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScatterSample>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Persistance.ScatterSample)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Persistance.ScatterSample)
    MergeFrom(*source);
  }
}

void ScatterSample::MergeFrom(const ScatterSample& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Persistance.ScatterSample)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_point()) {
    mutable_point()->::Persistance::Vector3::MergeFrom(from.point());
  }
  if (from.has_view_direction()) {
    mutable_view_direction()->::Persistance::Vector3::MergeFrom(from.view_direction());
  }
  if (from.scene_setup_id() != 0) {
    set_scene_setup_id(from.scene_setup_id());
  }
}

void ScatterSample::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Persistance.ScatterSample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScatterSample::CopyFrom(const ScatterSample& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Persistance.ScatterSample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScatterSample::IsInitialized() const {
  return true;
}

void ScatterSample::Swap(ScatterSample* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScatterSample::InternalSwap(ScatterSample* other) {
  using std::swap;
  swap(point_, other->point_);
  swap(view_direction_, other->view_direction_);
  swap(scene_setup_id_, other->scene_setup_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScatterSample::GetMetadata() const {
  protobuf_ScatterSample_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ScatterSample_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Persistance
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Persistance::ScatterSample* Arena::CreateMaybeMessage< ::Persistance::ScatterSample >(Arena* arena) {
  return Arena::CreateInternal< ::Persistance::ScatterSample >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
