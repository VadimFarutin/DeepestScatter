// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BakedDescriptor.proto

#include "BakedDescriptor.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_Vector_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Vector_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vector3;
}  // namespace protobuf_Vector_2eproto
namespace Persistance {
class BakedDescriptorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BakedDescriptor>
      _instance;
} _BakedDescriptor_default_instance_;
}  // namespace Persistance
namespace protobuf_BakedDescriptor_2eproto {
static void InitDefaultsBakedDescriptor() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Persistance::_BakedDescriptor_default_instance_;
    new (ptr) ::Persistance::BakedDescriptor();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Persistance::BakedDescriptor::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BakedDescriptor =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBakedDescriptor}, {
      &protobuf_Vector_2eproto::scc_info_Vector3.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_BakedDescriptor.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Persistance::BakedDescriptor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Persistance::BakedDescriptor, grid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Persistance::BakedDescriptor, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Persistance::BakedDescriptor, direction_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Persistance::BakedDescriptor)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::Persistance::_BakedDescriptor_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "BakedDescriptor.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025BakedDescriptor.proto\022\013Persistance\032\014Ve"
      "ctor.proto\"p\n\017BakedDescriptor\022\014\n\004grid\030\001 "
      "\001(\014\022&\n\010position\030\002 \001(\0132\024.Persistance.Vect"
      "or3\022\'\n\tdirection\030\003 \001(\0132\024.Persistance.Vec"
      "tor3b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 172);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "BakedDescriptor.proto", &protobuf_RegisterTypes);
  ::protobuf_Vector_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_BakedDescriptor_2eproto
namespace Persistance {

// ===================================================================

void BakedDescriptor::InitAsDefaultInstance() {
  ::Persistance::_BakedDescriptor_default_instance_._instance.get_mutable()->position_ = const_cast< ::Persistance::Vector3*>(
      ::Persistance::Vector3::internal_default_instance());
  ::Persistance::_BakedDescriptor_default_instance_._instance.get_mutable()->direction_ = const_cast< ::Persistance::Vector3*>(
      ::Persistance::Vector3::internal_default_instance());
}
void BakedDescriptor::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
}
void BakedDescriptor::clear_direction() {
  if (GetArenaNoVirtual() == NULL && direction_ != NULL) {
    delete direction_;
  }
  direction_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BakedDescriptor::kGridFieldNumber;
const int BakedDescriptor::kPositionFieldNumber;
const int BakedDescriptor::kDirectionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BakedDescriptor::BakedDescriptor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_BakedDescriptor_2eproto::scc_info_BakedDescriptor.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Persistance.BakedDescriptor)
}
BakedDescriptor::BakedDescriptor(const BakedDescriptor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  grid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.grid().size() > 0) {
    grid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.grid_);
  }
  if (from.has_position()) {
    position_ = new ::Persistance::Vector3(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_direction()) {
    direction_ = new ::Persistance::Vector3(*from.direction_);
  } else {
    direction_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Persistance.BakedDescriptor)
}

void BakedDescriptor::SharedCtor() {
  grid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&direction_) -
      reinterpret_cast<char*>(&position_)) + sizeof(direction_));
}

BakedDescriptor::~BakedDescriptor() {
  // @@protoc_insertion_point(destructor:Persistance.BakedDescriptor)
  SharedDtor();
}

void BakedDescriptor::SharedDtor() {
  grid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete direction_;
}

void BakedDescriptor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BakedDescriptor::descriptor() {
  ::protobuf_BakedDescriptor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_BakedDescriptor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BakedDescriptor& BakedDescriptor::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_BakedDescriptor_2eproto::scc_info_BakedDescriptor.base);
  return *internal_default_instance();
}


void BakedDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:Persistance.BakedDescriptor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  if (GetArenaNoVirtual() == NULL && direction_ != NULL) {
    delete direction_;
  }
  direction_ = NULL;
  _internal_metadata_.Clear();
}

bool BakedDescriptor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Persistance.BakedDescriptor)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes grid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_grid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Persistance.Vector3 position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Persistance.Vector3 direction = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_direction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Persistance.BakedDescriptor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Persistance.BakedDescriptor)
  return false;
#undef DO_
}

void BakedDescriptor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Persistance.BakedDescriptor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes grid = 1;
  if (this->grid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->grid(), output);
  }

  // .Persistance.Vector3 position = 2;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_position(), output);
  }

  // .Persistance.Vector3 direction = 3;
  if (this->has_direction()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_direction(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Persistance.BakedDescriptor)
}

::google::protobuf::uint8* BakedDescriptor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Persistance.BakedDescriptor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes grid = 1;
  if (this->grid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->grid(), target);
  }

  // .Persistance.Vector3 position = 2;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_position(), deterministic, target);
  }

  // .Persistance.Vector3 direction = 3;
  if (this->has_direction()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_direction(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Persistance.BakedDescriptor)
  return target;
}

size_t BakedDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Persistance.BakedDescriptor)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes grid = 1;
  if (this->grid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->grid());
  }

  // .Persistance.Vector3 position = 2;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .Persistance.Vector3 direction = 3;
  if (this->has_direction()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *direction_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BakedDescriptor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Persistance.BakedDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  const BakedDescriptor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BakedDescriptor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Persistance.BakedDescriptor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Persistance.BakedDescriptor)
    MergeFrom(*source);
  }
}

void BakedDescriptor::MergeFrom(const BakedDescriptor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Persistance.BakedDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.grid().size() > 0) {

    grid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.grid_);
  }
  if (from.has_position()) {
    mutable_position()->::Persistance::Vector3::MergeFrom(from.position());
  }
  if (from.has_direction()) {
    mutable_direction()->::Persistance::Vector3::MergeFrom(from.direction());
  }
}

void BakedDescriptor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Persistance.BakedDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BakedDescriptor::CopyFrom(const BakedDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Persistance.BakedDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BakedDescriptor::IsInitialized() const {
  return true;
}

void BakedDescriptor::Swap(BakedDescriptor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BakedDescriptor::InternalSwap(BakedDescriptor* other) {
  using std::swap;
  grid_.Swap(&other->grid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(position_, other->position_);
  swap(direction_, other->direction_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BakedDescriptor::GetMetadata() const {
  protobuf_BakedDescriptor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_BakedDescriptor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Persistance
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Persistance::BakedDescriptor* Arena::CreateMaybeMessage< ::Persistance::BakedDescriptor >(Arena* arena) {
  return Arena::CreateInternal< ::Persistance::BakedDescriptor >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
