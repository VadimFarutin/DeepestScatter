//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-22781540
// Cuda compilation tools, release 9.0, V9.0.176
// Based on LLVM 3.4svn
//

.version 6.0
.target sm_30
.address_size 64

	// .globl	_Z9firstPassv
.global .align 4 .f32 DELTA = 0f3A83126F;
.global .align 1 .b8 progressiveBuffer[1];
.global .align 1 .b8 sumLogColumns[1];
.global .align 1 .b8 lAverage[1];
.global .align 4 .u32 totalPixels;
.global .align 4 .b8 launchID1[4];
.global .align 1 .b8 screenBuffer[1];
.global .align 4 .f32 midGrey;
.global .align 8 .b8 launchID2[8];
.global .align 4 .b8 _ZN21rti_internal_typeinfo11totalPixelsE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9launchID1E[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7midGreyE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9launchID2E[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 16 .b8 _ZN21rti_internal_typename11totalPixelsE[13] = {117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9launchID1E[6] = {117, 105, 110, 116, 49, 0};
.global .align 8 .b8 _ZN21rti_internal_typename7midGreyE[6] = {102, 108, 111, 97, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9launchID2E[6] = {117, 105, 110, 116, 50, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum11totalPixelsE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9launchID1E = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7midGreyE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9launchID2E = 4919;
.global .align 1 .b8 _ZN21rti_internal_semantic11totalPixelsE[1];
.global .align 16 .b8 _ZN21rti_internal_semantic9launchID1E[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic7midGreyE[1];
.global .align 16 .b8 _ZN21rti_internal_semantic9launchID2E[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 1 .b8 _ZN23rti_internal_annotation11totalPixelsE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9launchID1E[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7midGreyE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9launchID2E[1];

.visible .entry _Z9firstPassv(

)
{
	.reg .pred 	%p<28>;
	.reg .f32 	%f<344>;
	.reg .b32 	%r<80>;
	.reg .b64 	%rd<115>;


	mov.u64 	%rd14, progressiveBuffer;
	cvta.global.u64 	%rd7, %rd14;
	mov.u32 	%r8, 2;
	mov.u32 	%r9, 16;
	// inline asm
	call (%rd3, %rd4, %rd5, %rd6), _rt_buffer_get_size_64, (%rd7, %r8, %r9);
	// inline asm
	ld.global.u32 	%rd10, [launchID1];
	mov.u64 	%rd15, sumLogColumns;
	cvta.global.u64 	%rd9, %rd15;
	mov.u32 	%r10, 1;
	mov.u32 	%r11, 4;
	mov.u64 	%rd13, 0;
	// inline asm
	call (%rd8), _rt_buffer_get_64, (%rd9, %r10, %r11, %rd10, %rd13, %rd13, %rd13);
	// inline asm
	mov.u32 	%r79, 0;
	st.u32 	[%rd8], %r79;
	setp.eq.s64	%p1, %rd4, 0;
	@%p1 bra 	BB0_23;

	and.b64  	%rd2, %rd4, 3;
	setp.eq.s64	%p2, %rd2, 0;
	@%p2 bra 	BB0_13;

	setp.eq.s64	%p3, %rd2, 1;
	mov.u32 	%r77, 0;
	@%p3 bra 	BB0_10;

	setp.eq.s64	%p4, %rd2, 2;
	mov.u32 	%r76, 0;
	@%p4 bra 	BB0_7;

	ld.global.u32 	%rd18, [launchID1];
	// inline asm
	call (%rd16), _rt_buffer_get_64, (%rd7, %r8, %r9, %rd18, %rd13, %rd13, %rd13);
	// inline asm
	ld.v4.f32 	{%f29, %f30, %f31, %f32}, [%rd16];
	mul.f32 	%f37, %f30, 0f3F371759;
	fma.rn.f32 	%f38, %f29, 0f3E59B3D0, %f37;
	fma.rn.f32 	%f39, %f31, 0f3D93DD98, %f38;
	fma.rn.f32 	%f40, %f32, 0f00000000, %f39;
	add.f32 	%f41, %f40, 0f3A83126F;
	setp.lt.f32	%p5, %f41, 0f00800000;
	mul.f32 	%f42, %f41, 0f4B000000;
	selp.f32	%f1, %f42, %f41, %p5;
	selp.f32	%f43, 0fC1B80000, 0f00000000, %p5;
	mov.b32 	 %r18, %f1;
	add.s32 	%r19, %r18, -1059760811;
	and.b32  	%r20, %r19, -8388608;
	sub.s32 	%r21, %r18, %r20;
	mov.b32 	 %f44, %r21;
	cvt.rn.f32.s32	%f45, %r20;
	mov.f32 	%f46, 0f34000000;
	fma.rn.f32 	%f47, %f45, %f46, %f43;
	add.f32 	%f48, %f44, 0fBF800000;
	mov.f32 	%f49, 0f3E1039F6;
	mov.f32 	%f50, 0fBE055027;
	fma.rn.f32 	%f51, %f50, %f48, %f49;
	mov.f32 	%f52, 0fBDF8CDCC;
	fma.rn.f32 	%f53, %f51, %f48, %f52;
	mov.f32 	%f54, 0f3E0F2955;
	fma.rn.f32 	%f55, %f53, %f48, %f54;
	mov.f32 	%f56, 0fBE2AD8B9;
	fma.rn.f32 	%f57, %f55, %f48, %f56;
	mov.f32 	%f58, 0f3E4CED0B;
	fma.rn.f32 	%f59, %f57, %f48, %f58;
	mov.f32 	%f60, 0fBE7FFF22;
	fma.rn.f32 	%f61, %f59, %f48, %f60;
	mov.f32 	%f62, 0f3EAAAA78;
	fma.rn.f32 	%f63, %f61, %f48, %f62;
	mov.f32 	%f64, 0fBF000000;
	fma.rn.f32 	%f65, %f63, %f48, %f64;
	mul.f32 	%f66, %f65, %f48;
	fma.rn.f32 	%f67, %f66, %f48, %f48;
	mov.f32 	%f68, 0f3F317218;
	fma.rn.f32 	%f337, %f47, %f68, %f67;
	setp.lt.u32	%p6, %r18, 2139095040;
	@%p6 bra 	BB0_6;

	mov.f32 	%f69, 0f7F800000;
	fma.rn.f32 	%f337, %f1, %f69, %f69;

BB0_6:
	setp.eq.f32	%p7, %f1, 0f00000000;
	selp.f32	%f70, 0fFF800000, %f337, %p7;
	ld.global.u32 	%rd25, [launchID1];
	// inline asm
	call (%rd23), _rt_buffer_get_64, (%rd9, %r10, %r11, %rd25, %rd13, %rd13, %rd13);
	// inline asm
	ld.f32 	%f71, [%rd23];
	add.f32 	%f72, %f70, %f71;
	st.f32 	[%rd23], %f72;
	mov.u32 	%r76, %r10;

BB0_7:
	ld.global.u32 	%rd32, [launchID1];
	cvt.u64.u32	%rd33, %r76;
	// inline asm
	call (%rd30), _rt_buffer_get_64, (%rd7, %r8, %r9, %rd32, %rd33, %rd13, %rd13);
	// inline asm
	ld.v4.f32 	{%f73, %f74, %f75, %f76}, [%rd30];
	mul.f32 	%f81, %f74, 0f3F371759;
	fma.rn.f32 	%f82, %f73, 0f3E59B3D0, %f81;
	fma.rn.f32 	%f83, %f75, 0f3D93DD98, %f82;
	fma.rn.f32 	%f84, %f76, 0f00000000, %f83;
	add.f32 	%f85, %f84, 0f3A83126F;
	setp.lt.f32	%p8, %f85, 0f00800000;
	mul.f32 	%f86, %f85, 0f4B000000;
	selp.f32	%f5, %f86, %f85, %p8;
	selp.f32	%f87, 0fC1B80000, 0f00000000, %p8;
	mov.b32 	 %r27, %f5;
	add.s32 	%r28, %r27, -1059760811;
	and.b32  	%r29, %r28, -8388608;
	sub.s32 	%r30, %r27, %r29;
	mov.b32 	 %f88, %r30;
	cvt.rn.f32.s32	%f89, %r29;
	mov.f32 	%f90, 0f34000000;
	fma.rn.f32 	%f91, %f89, %f90, %f87;
	add.f32 	%f92, %f88, 0fBF800000;
	mov.f32 	%f93, 0f3E1039F6;
	mov.f32 	%f94, 0fBE055027;
	fma.rn.f32 	%f95, %f94, %f92, %f93;
	mov.f32 	%f96, 0fBDF8CDCC;
	fma.rn.f32 	%f97, %f95, %f92, %f96;
	mov.f32 	%f98, 0f3E0F2955;
	fma.rn.f32 	%f99, %f97, %f92, %f98;
	mov.f32 	%f100, 0fBE2AD8B9;
	fma.rn.f32 	%f101, %f99, %f92, %f100;
	mov.f32 	%f102, 0f3E4CED0B;
	fma.rn.f32 	%f103, %f101, %f92, %f102;
	mov.f32 	%f104, 0fBE7FFF22;
	fma.rn.f32 	%f105, %f103, %f92, %f104;
	mov.f32 	%f106, 0f3EAAAA78;
	fma.rn.f32 	%f107, %f105, %f92, %f106;
	mov.f32 	%f108, 0fBF000000;
	fma.rn.f32 	%f109, %f107, %f92, %f108;
	mul.f32 	%f110, %f109, %f92;
	fma.rn.f32 	%f111, %f110, %f92, %f92;
	mov.f32 	%f112, 0f3F317218;
	fma.rn.f32 	%f338, %f91, %f112, %f111;
	setp.lt.u32	%p9, %r27, 2139095040;
	@%p9 bra 	BB0_9;

	mov.f32 	%f113, 0f7F800000;
	fma.rn.f32 	%f338, %f5, %f113, %f113;

BB0_9:
	setp.eq.f32	%p10, %f5, 0f00000000;
	selp.f32	%f114, 0fFF800000, %f338, %p10;
	ld.global.u32 	%rd39, [launchID1];
	mov.u32 	%r31, 1;
	// inline asm
	call (%rd37), _rt_buffer_get_64, (%rd9, %r31, %r11, %rd39, %rd13, %rd13, %rd13);
	// inline asm
	ld.f32 	%f115, [%rd37];
	add.f32 	%f116, %f114, %f115;
	st.f32 	[%rd37], %f116;
	add.s32 	%r77, %r76, 1;

BB0_10:
	ld.global.u32 	%rd46, [launchID1];
	cvt.u64.u32	%rd47, %r77;
	// inline asm
	call (%rd44), _rt_buffer_get_64, (%rd7, %r8, %r9, %rd46, %rd47, %rd13, %rd13);
	// inline asm
	ld.v4.f32 	{%f117, %f118, %f119, %f120}, [%rd44];
	mul.f32 	%f125, %f118, 0f3F371759;
	fma.rn.f32 	%f126, %f117, 0f3E59B3D0, %f125;
	fma.rn.f32 	%f127, %f119, 0f3D93DD98, %f126;
	fma.rn.f32 	%f128, %f120, 0f00000000, %f127;
	add.f32 	%f129, %f128, 0f3A83126F;
	setp.lt.f32	%p11, %f129, 0f00800000;
	mul.f32 	%f130, %f129, 0f4B000000;
	selp.f32	%f9, %f130, %f129, %p11;
	selp.f32	%f131, 0fC1B80000, 0f00000000, %p11;
	mov.b32 	 %r35, %f9;
	add.s32 	%r36, %r35, -1059760811;
	and.b32  	%r37, %r36, -8388608;
	sub.s32 	%r38, %r35, %r37;
	mov.b32 	 %f132, %r38;
	cvt.rn.f32.s32	%f133, %r37;
	mov.f32 	%f134, 0f34000000;
	fma.rn.f32 	%f135, %f133, %f134, %f131;
	add.f32 	%f136, %f132, 0fBF800000;
	mov.f32 	%f137, 0f3E1039F6;
	mov.f32 	%f138, 0fBE055027;
	fma.rn.f32 	%f139, %f138, %f136, %f137;
	mov.f32 	%f140, 0fBDF8CDCC;
	fma.rn.f32 	%f141, %f139, %f136, %f140;
	mov.f32 	%f142, 0f3E0F2955;
	fma.rn.f32 	%f143, %f141, %f136, %f142;
	mov.f32 	%f144, 0fBE2AD8B9;
	fma.rn.f32 	%f145, %f143, %f136, %f144;
	mov.f32 	%f146, 0f3E4CED0B;
	fma.rn.f32 	%f147, %f145, %f136, %f146;
	mov.f32 	%f148, 0fBE7FFF22;
	fma.rn.f32 	%f149, %f147, %f136, %f148;
	mov.f32 	%f150, 0f3EAAAA78;
	fma.rn.f32 	%f151, %f149, %f136, %f150;
	mov.f32 	%f152, 0fBF000000;
	fma.rn.f32 	%f153, %f151, %f136, %f152;
	mul.f32 	%f154, %f153, %f136;
	fma.rn.f32 	%f155, %f154, %f136, %f136;
	mov.f32 	%f156, 0f3F317218;
	fma.rn.f32 	%f339, %f135, %f156, %f155;
	setp.lt.u32	%p12, %r35, 2139095040;
	@%p12 bra 	BB0_12;

	mov.f32 	%f157, 0f7F800000;
	fma.rn.f32 	%f339, %f9, %f157, %f157;

BB0_12:
	setp.eq.f32	%p13, %f9, 0f00000000;
	selp.f32	%f158, 0fFF800000, %f339, %p13;
	ld.global.u32 	%rd53, [launchID1];
	mov.u32 	%r39, 1;
	// inline asm
	call (%rd51), _rt_buffer_get_64, (%rd9, %r39, %r11, %rd53, %rd13, %rd13, %rd13);
	// inline asm
	ld.f32 	%f159, [%rd51];
	add.f32 	%f160, %f158, %f159;
	st.f32 	[%rd51], %f160;
	add.s32 	%r79, %r77, 1;

BB0_13:
	setp.lt.u64	%p14, %rd4, 4;
	@%p14 bra 	BB0_23;

BB0_14:
	ld.global.u32 	%rd60, [launchID1];
	cvt.u64.u32	%rd61, %r79;
	// inline asm
	call (%rd58), _rt_buffer_get_64, (%rd7, %r8, %r9, %rd60, %rd61, %rd13, %rd13);
	// inline asm
	ld.v4.f32 	{%f161, %f162, %f163, %f164}, [%rd58];
	mul.f32 	%f169, %f162, 0f3F371759;
	fma.rn.f32 	%f170, %f161, 0f3E59B3D0, %f169;
	fma.rn.f32 	%f171, %f163, 0f3D93DD98, %f170;
	fma.rn.f32 	%f172, %f164, 0f00000000, %f171;
	add.f32 	%f173, %f172, 0f3A83126F;
	setp.lt.f32	%p15, %f173, 0f00800000;
	mul.f32 	%f174, %f173, 0f4B000000;
	selp.f32	%f13, %f174, %f173, %p15;
	selp.f32	%f175, 0fC1B80000, 0f00000000, %p15;
	mov.b32 	 %r43, %f13;
	add.s32 	%r44, %r43, -1059760811;
	and.b32  	%r45, %r44, -8388608;
	sub.s32 	%r46, %r43, %r45;
	mov.b32 	 %f176, %r46;
	cvt.rn.f32.s32	%f177, %r45;
	mov.f32 	%f178, 0f34000000;
	fma.rn.f32 	%f179, %f177, %f178, %f175;
	add.f32 	%f180, %f176, 0fBF800000;
	mov.f32 	%f181, 0f3E1039F6;
	mov.f32 	%f182, 0fBE055027;
	fma.rn.f32 	%f183, %f182, %f180, %f181;
	mov.f32 	%f184, 0fBDF8CDCC;
	fma.rn.f32 	%f185, %f183, %f180, %f184;
	mov.f32 	%f186, 0f3E0F2955;
	fma.rn.f32 	%f187, %f185, %f180, %f186;
	mov.f32 	%f188, 0fBE2AD8B9;
	fma.rn.f32 	%f189, %f187, %f180, %f188;
	mov.f32 	%f190, 0f3E4CED0B;
	fma.rn.f32 	%f191, %f189, %f180, %f190;
	mov.f32 	%f192, 0fBE7FFF22;
	fma.rn.f32 	%f193, %f191, %f180, %f192;
	mov.f32 	%f194, 0f3EAAAA78;
	fma.rn.f32 	%f195, %f193, %f180, %f194;
	mov.f32 	%f196, 0fBF000000;
	fma.rn.f32 	%f197, %f195, %f180, %f196;
	mul.f32 	%f198, %f197, %f180;
	fma.rn.f32 	%f199, %f198, %f180, %f180;
	mov.f32 	%f200, 0f3F317218;
	fma.rn.f32 	%f340, %f179, %f200, %f199;
	setp.lt.u32	%p16, %r43, 2139095040;
	@%p16 bra 	BB0_16;

	mov.f32 	%f201, 0f7F800000;
	fma.rn.f32 	%f340, %f13, %f201, %f201;

BB0_16:
	setp.eq.f32	%p17, %f13, 0f00000000;
	selp.f32	%f202, 0fFF800000, %f340, %p17;
	ld.global.u32 	%rd67, [launchID1];
	mov.u32 	%r47, 1;
	// inline asm
	call (%rd65), _rt_buffer_get_64, (%rd9, %r47, %r11, %rd67, %rd13, %rd13, %rd13);
	// inline asm
	ld.f32 	%f203, [%rd65];
	add.f32 	%f204, %f202, %f203;
	st.f32 	[%rd65], %f204;
	ld.global.u32 	%rd73, [launchID1];
	add.s32 	%r51, %r79, 1;
	cvt.u64.u32	%rd74, %r51;
	// inline asm
	call (%rd71), _rt_buffer_get_64, (%rd7, %r8, %r9, %rd73, %rd74, %rd13, %rd13);
	// inline asm
	ld.v4.f32 	{%f205, %f206, %f207, %f208}, [%rd71];
	mul.f32 	%f213, %f206, 0f3F371759;
	fma.rn.f32 	%f214, %f205, 0f3E59B3D0, %f213;
	fma.rn.f32 	%f215, %f207, 0f3D93DD98, %f214;
	fma.rn.f32 	%f216, %f208, 0f00000000, %f215;
	add.f32 	%f217, %f216, 0f3A83126F;
	setp.lt.f32	%p18, %f217, 0f00800000;
	mul.f32 	%f218, %f217, 0f4B000000;
	selp.f32	%f17, %f218, %f217, %p18;
	selp.f32	%f219, 0fC1B80000, 0f00000000, %p18;
	mov.b32 	 %r52, %f17;
	add.s32 	%r53, %r52, -1059760811;
	and.b32  	%r54, %r53, -8388608;
	sub.s32 	%r55, %r52, %r54;
	mov.b32 	 %f220, %r55;
	cvt.rn.f32.s32	%f221, %r54;
	fma.rn.f32 	%f223, %f221, %f178, %f219;
	add.f32 	%f224, %f220, 0fBF800000;
	fma.rn.f32 	%f227, %f182, %f224, %f181;
	fma.rn.f32 	%f229, %f227, %f224, %f184;
	fma.rn.f32 	%f231, %f229, %f224, %f186;
	fma.rn.f32 	%f233, %f231, %f224, %f188;
	fma.rn.f32 	%f235, %f233, %f224, %f190;
	fma.rn.f32 	%f237, %f235, %f224, %f192;
	fma.rn.f32 	%f239, %f237, %f224, %f194;
	fma.rn.f32 	%f241, %f239, %f224, %f196;
	mul.f32 	%f242, %f241, %f224;
	fma.rn.f32 	%f243, %f242, %f224, %f224;
	fma.rn.f32 	%f341, %f223, %f200, %f243;
	setp.lt.u32	%p19, %r52, 2139095040;
	@%p19 bra 	BB0_18;

	mov.f32 	%f245, 0f7F800000;
	fma.rn.f32 	%f341, %f17, %f245, %f245;

BB0_18:
	setp.eq.f32	%p20, %f17, 0f00000000;
	selp.f32	%f246, 0fFF800000, %f341, %p20;
	ld.global.u32 	%rd81, [launchID1];
	// inline asm
	call (%rd79), _rt_buffer_get_64, (%rd9, %r47, %r11, %rd81, %rd13, %rd13, %rd13);
	// inline asm
	ld.f32 	%f247, [%rd79];
	add.f32 	%f248, %f246, %f247;
	st.f32 	[%rd79], %f248;
	ld.global.u32 	%rd87, [launchID1];
	add.s32 	%r60, %r79, 2;
	cvt.u64.u32	%rd88, %r60;
	// inline asm
	call (%rd85), _rt_buffer_get_64, (%rd7, %r8, %r9, %rd87, %rd88, %rd13, %rd13);
	// inline asm
	ld.v4.f32 	{%f249, %f250, %f251, %f252}, [%rd85];
	mul.f32 	%f257, %f250, 0f3F371759;
	fma.rn.f32 	%f258, %f249, 0f3E59B3D0, %f257;
	fma.rn.f32 	%f259, %f251, 0f3D93DD98, %f258;
	fma.rn.f32 	%f260, %f252, 0f00000000, %f259;
	add.f32 	%f261, %f260, 0f3A83126F;
	setp.lt.f32	%p21, %f261, 0f00800000;
	mul.f32 	%f262, %f261, 0f4B000000;
	selp.f32	%f21, %f262, %f261, %p21;
	selp.f32	%f263, 0fC1B80000, 0f00000000, %p21;
	mov.b32 	 %r61, %f21;
	add.s32 	%r62, %r61, -1059760811;
	and.b32  	%r63, %r62, -8388608;
	sub.s32 	%r64, %r61, %r63;
	mov.b32 	 %f264, %r64;
	cvt.rn.f32.s32	%f265, %r63;
	fma.rn.f32 	%f267, %f265, %f178, %f263;
	add.f32 	%f268, %f264, 0fBF800000;
	fma.rn.f32 	%f271, %f182, %f268, %f181;
	fma.rn.f32 	%f273, %f271, %f268, %f184;
	fma.rn.f32 	%f275, %f273, %f268, %f186;
	fma.rn.f32 	%f277, %f275, %f268, %f188;
	fma.rn.f32 	%f279, %f277, %f268, %f190;
	fma.rn.f32 	%f281, %f279, %f268, %f192;
	fma.rn.f32 	%f283, %f281, %f268, %f194;
	fma.rn.f32 	%f285, %f283, %f268, %f196;
	mul.f32 	%f286, %f285, %f268;
	fma.rn.f32 	%f287, %f286, %f268, %f268;
	fma.rn.f32 	%f342, %f267, %f200, %f287;
	setp.lt.u32	%p22, %r61, 2139095040;
	@%p22 bra 	BB0_20;

	mov.f32 	%f289, 0f7F800000;
	fma.rn.f32 	%f342, %f21, %f289, %f289;

BB0_20:
	setp.eq.f32	%p23, %f21, 0f00000000;
	selp.f32	%f290, 0fFF800000, %f342, %p23;
	ld.global.u32 	%rd95, [launchID1];
	// inline asm
	call (%rd93), _rt_buffer_get_64, (%rd9, %r47, %r11, %rd95, %rd13, %rd13, %rd13);
	// inline asm
	ld.f32 	%f291, [%rd93];
	add.f32 	%f292, %f290, %f291;
	st.f32 	[%rd93], %f292;
	ld.global.u32 	%rd101, [launchID1];
	add.s32 	%r69, %r79, 3;
	cvt.u64.u32	%rd102, %r69;
	// inline asm
	call (%rd99), _rt_buffer_get_64, (%rd7, %r8, %r9, %rd101, %rd102, %rd13, %rd13);
	// inline asm
	ld.v4.f32 	{%f293, %f294, %f295, %f296}, [%rd99];
	mul.f32 	%f301, %f294, 0f3F371759;
	fma.rn.f32 	%f302, %f293, 0f3E59B3D0, %f301;
	fma.rn.f32 	%f303, %f295, 0f3D93DD98, %f302;
	fma.rn.f32 	%f304, %f296, 0f00000000, %f303;
	add.f32 	%f305, %f304, 0f3A83126F;
	setp.lt.f32	%p24, %f305, 0f00800000;
	mul.f32 	%f306, %f305, 0f4B000000;
	selp.f32	%f25, %f306, %f305, %p24;
	selp.f32	%f307, 0fC1B80000, 0f00000000, %p24;
	mov.b32 	 %r70, %f25;
	add.s32 	%r71, %r70, -1059760811;
	and.b32  	%r72, %r71, -8388608;
	sub.s32 	%r73, %r70, %r72;
	mov.b32 	 %f308, %r73;
	cvt.rn.f32.s32	%f309, %r72;
	fma.rn.f32 	%f311, %f309, %f178, %f307;
	add.f32 	%f312, %f308, 0fBF800000;
	fma.rn.f32 	%f315, %f182, %f312, %f181;
	fma.rn.f32 	%f317, %f315, %f312, %f184;
	fma.rn.f32 	%f319, %f317, %f312, %f186;
	fma.rn.f32 	%f321, %f319, %f312, %f188;
	fma.rn.f32 	%f323, %f321, %f312, %f190;
	fma.rn.f32 	%f325, %f323, %f312, %f192;
	fma.rn.f32 	%f327, %f325, %f312, %f194;
	fma.rn.f32 	%f329, %f327, %f312, %f196;
	mul.f32 	%f330, %f329, %f312;
	fma.rn.f32 	%f331, %f330, %f312, %f312;
	fma.rn.f32 	%f343, %f311, %f200, %f331;
	setp.lt.u32	%p25, %r70, 2139095040;
	@%p25 bra 	BB0_22;

	mov.f32 	%f333, 0f7F800000;
	fma.rn.f32 	%f343, %f25, %f333, %f333;

BB0_22:
	setp.eq.f32	%p26, %f25, 0f00000000;
	selp.f32	%f334, 0fFF800000, %f343, %p26;
	ld.global.u32 	%rd109, [launchID1];
	// inline asm
	call (%rd107), _rt_buffer_get_64, (%rd9, %r47, %r11, %rd109, %rd13, %rd13, %rd13);
	// inline asm
	ld.f32 	%f335, [%rd107];
	add.f32 	%f336, %f334, %f335;
	st.f32 	[%rd107], %f336;
	add.s32 	%r79, %r79, 4;
	cvt.s64.s32	%rd114, %r79;
	setp.lt.u64	%p27, %rd114, %rd4;
	@%p27 bra 	BB0_14;

BB0_23:
	ret;
}

	// .globl	_Z10secondPassv
.visible .entry _Z10secondPassv(

)
{
	.reg .pred 	%p<9>;
	.reg .f32 	%f<44>;
	.reg .b32 	%r<37>;
	.reg .b64 	%rd<79>;


	mov.u64 	%rd16, sumLogColumns;
	cvta.global.u64 	%rd15, %rd16;
	mov.u32 	%r7, 1;
	mov.u32 	%r8, 4;
	// inline asm
	call (%rd11, %rd12, %rd13, %rd14), _rt_buffer_get_size_64, (%rd15, %r7, %r8);
	// inline asm
	and.b64  	%rd2, %rd11, 4294967295;
	setp.eq.s64	%p1, %rd2, 0;
	mov.f32 	%f43, 0f00000000;
	@%p1 bra 	BB1_9;

	and.b64  	%rd3, %rd11, 3;
	setp.eq.s64	%p2, %rd3, 0;
	mov.f32 	%f43, 0f00000000;
	mov.u32 	%r35, 0;
	mov.u64 	%rd77, 0;
	@%p2 bra 	BB1_7;

	setp.eq.s64	%p3, %rd3, 1;
	mov.f32 	%f40, 0f00000000;
	mov.u32 	%r34, 0;
	mov.u64 	%rd18, 0;
	mov.u64 	%rd76, %rd18;
	@%p3 bra 	BB1_6;

	setp.eq.s64	%p4, %rd3, 2;
	mov.f32 	%f39, 0f00000000;
	mov.u64 	%rd19, 0;
	mov.u64 	%rd75, %rd19;
	mov.u32 	%r34, %r7;
	@%p4 bra 	BB1_5;

	mov.u32 	%r12, 1;
	mov.u64 	%rd25, 0;
	// inline asm
	call (%rd20), _rt_buffer_get_64, (%rd15, %r12, %r8, %rd25, %rd25, %rd25, %rd25);
	// inline asm
	ld.f32 	%f14, [%rd20];
	add.f32 	%f39, %f14, 0f00000000;
	mov.u32 	%r34, 2;
	mov.u64 	%rd75, 1;

BB1_5:
	// inline asm
	call (%rd28), _rt_buffer_get_64, (%rd15, %r7, %r8, %rd75, %rd19, %rd19, %rd19);
	// inline asm
	ld.f32 	%f15, [%rd28];
	add.f32 	%f40, %f39, %f15;
	cvt.u64.u32	%rd76, %r34;

BB1_6:
	mov.u32 	%r17, 1;
	// inline asm
	call (%rd35), _rt_buffer_get_64, (%rd15, %r17, %r8, %rd76, %rd18, %rd18, %rd18);
	// inline asm
	ld.f32 	%f16, [%rd35];
	add.f32 	%f43, %f40, %f16;
	add.s32 	%r35, %r34, 1;
	cvt.s64.s32	%rd77, %r35;

BB1_7:
	and.b64  	%rd42, %rd11, 4294967292;
	setp.lt.u64	%p5, %rd42, 4;
	@%p5 bra 	BB1_9;

BB1_8:
	mov.u32 	%r25, 1;
	mov.u64 	%rd66, 0;
	// inline asm
	call (%rd43), _rt_buffer_get_64, (%rd15, %r25, %r8, %rd77, %rd66, %rd66, %rd66);
	// inline asm
	ld.f32 	%f17, [%rd43];
	add.f32 	%f18, %f43, %f17;
	add.s32 	%r27, %r35, 1;
	cvt.s64.s32	%rd51, %r27;
	// inline asm
	call (%rd49), _rt_buffer_get_64, (%rd15, %r25, %r8, %rd51, %rd66, %rd66, %rd66);
	// inline asm
	ld.f32 	%f19, [%rd49];
	add.f32 	%f20, %f18, %f19;
	add.s32 	%r28, %r35, 2;
	cvt.s64.s32	%rd57, %r28;
	// inline asm
	call (%rd55), _rt_buffer_get_64, (%rd15, %r25, %r8, %rd57, %rd66, %rd66, %rd66);
	// inline asm
	ld.f32 	%f21, [%rd55];
	add.f32 	%f22, %f20, %f21;
	add.s32 	%r29, %r35, 3;
	cvt.s64.s32	%rd63, %r29;
	// inline asm
	call (%rd61), _rt_buffer_get_64, (%rd15, %r25, %r8, %rd63, %rd66, %rd66, %rd66);
	// inline asm
	ld.f32 	%f23, [%rd61];
	add.f32 	%f43, %f22, %f23;
	add.s32 	%r35, %r35, 4;
	cvt.s64.s32	%rd77, %r35;
	setp.lt.u64	%p6, %rd77, %rd2;
	@%p6 bra 	BB1_8;

BB1_9:
	ld.global.u32 	%r32, [totalPixels];
	cvt.rn.f32.u32	%f24, %r32;
	div.rn.f32 	%f25, %f43, %f24;
	mul.f32 	%f26, %f25, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f27, %f26;
	mov.f32 	%f28, 0fBF317200;
	fma.rn.f32 	%f29, %f27, %f28, %f25;
	mov.f32 	%f30, 0fB5BFBE8E;
	fma.rn.f32 	%f31, %f27, %f30, %f29;
	mul.f32 	%f32, %f31, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f33, %f32;
	add.f32 	%f34, %f27, 0f00000000;
	ex2.approx.f32 	%f35, %f34;
	mul.f32 	%f36, %f33, %f35;
	setp.lt.f32	%p7, %f25, 0fC2D20000;
	selp.f32	%f37, 0f00000000, %f36, %p7;
	setp.gt.f32	%p8, %f25, 0f42D20000;
	selp.f32	%f38, 0f7F800000, %f37, %p8;
	mov.u64 	%rd74, lAverage;
	cvta.global.u64 	%rd69, %rd74;
	mov.u32 	%r30, 1;
	mov.u64 	%rd73, 0;
	// inline asm
	call (%rd68), _rt_buffer_get_64, (%rd69, %r30, %r8, %rd73, %rd73, %rd73, %rd73);
	// inline asm
	st.f32 	[%rd68], %f38;
	ret;
}

	// .globl	_Z13applyReinhardv
.visible .entry _Z13applyReinhardv(

)
{
	.reg .pred 	%p<52>;
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<340>;
	.reg .b32 	%r<47>;
	.reg .b64 	%rd<23>;


	ld.global.f32 	%f43, [midGrey];
	ld.global.v2.u32 	{%r5, %r6}, [launchID2];
	cvt.u64.u32	%rd3, %r5;
	cvt.u64.u32	%rd4, %r6;
	mov.u64 	%rd13, progressiveBuffer;
	cvta.global.u64 	%rd2, %rd13;
	mov.u32 	%r1, 2;
	mov.u32 	%r2, 16;
	mov.u64 	%rd12, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r1, %r2, %rd3, %rd4, %rd12, %rd12);
	// inline asm
	ld.v4.f32 	{%f44, %f45, %f46, %f47}, [%rd1];
	mul.f32 	%f49, %f43, %f44;
	mul.f32 	%f51, %f43, %f45;
	mul.f32 	%f53, %f43, %f46;
	mov.u64 	%rd14, lAverage;
	cvta.global.u64 	%rd8, %rd14;
	mov.u32 	%r3, 1;
	mov.u32 	%r4, 4;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd8, %r3, %r4, %rd12, %rd12, %rd12, %rd12);
	// inline asm
	ld.f32 	%f54, [%rd7];
	rcp.rn.f32 	%f55, %f54;
	mul.f32 	%f56, %f49, %f55;
	mul.f32 	%f57, %f51, %f55;
	mul.f32 	%f58, %f53, %f55;
	add.f32 	%f59, %f56, 0f3F800000;
	add.f32 	%f60, %f57, 0f3F800000;
	add.f32 	%f61, %f58, 0f3F800000;
	div.rn.f32 	%f1, %f56, %f59;
	div.rn.f32 	%f2, %f57, %f60;
	div.rn.f32 	%f3, %f58, %f61;
	abs.f32 	%f5, %f1;
	setp.lt.f32	%p4, %f5, 0f00800000;
	mul.f32 	%f65, %f5, 0f4B800000;
	selp.f32	%f66, 0fC3170000, 0fC2FE0000, %p4;
	selp.f32	%f67, %f65, %f5, %p4;
	mov.b32 	 %r9, %f67;
	and.b32  	%r10, %r9, 8388607;
	or.b32  	%r11, %r10, 1065353216;
	mov.b32 	 %f68, %r11;
	shr.u32 	%r12, %r9, 23;
	cvt.rn.f32.u32	%f69, %r12;
	add.f32 	%f70, %f66, %f69;
	setp.gt.f32	%p5, %f68, 0f3FB504F3;
	mul.f32 	%f71, %f68, 0f3F000000;
	add.f32 	%f72, %f70, 0f3F800000;
	selp.f32	%f73, %f71, %f68, %p5;
	selp.f32	%f74, %f72, %f70, %p5;
	add.f32 	%f75, %f73, 0fBF800000;
	add.f32 	%f42, %f73, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f41,%f42;
	// inline asm
	add.f32 	%f76, %f75, %f75;
	mul.f32 	%f77, %f41, %f76;
	mul.f32 	%f78, %f77, %f77;
	mov.f32 	%f79, 0f3C4CAF63;
	mov.f32 	%f80, 0f3B18F0FE;
	fma.rn.f32 	%f81, %f80, %f78, %f79;
	mov.f32 	%f82, 0f3DAAAABD;
	fma.rn.f32 	%f83, %f81, %f78, %f82;
	mul.rn.f32 	%f84, %f83, %f78;
	mul.rn.f32 	%f85, %f84, %f77;
	sub.f32 	%f86, %f75, %f77;
	neg.f32 	%f87, %f77;
	add.f32 	%f88, %f86, %f86;
	fma.rn.f32 	%f89, %f87, %f75, %f88;
	mul.rn.f32 	%f90, %f41, %f89;
	add.f32 	%f91, %f85, %f77;
	sub.f32 	%f92, %f77, %f91;
	add.f32 	%f93, %f85, %f92;
	add.f32 	%f94, %f90, %f93;
	add.f32 	%f95, %f91, %f94;
	sub.f32 	%f96, %f91, %f95;
	add.f32 	%f97, %f94, %f96;
	mov.f32 	%f98, 0f3F317200;
	mul.rn.f32 	%f99, %f74, %f98;
	mov.f32 	%f100, 0f35BFBE8E;
	mul.rn.f32 	%f101, %f74, %f100;
	add.f32 	%f102, %f99, %f95;
	sub.f32 	%f103, %f99, %f102;
	add.f32 	%f104, %f95, %f103;
	add.f32 	%f105, %f97, %f104;
	add.f32 	%f106, %f101, %f105;
	add.f32 	%f107, %f102, %f106;
	sub.f32 	%f108, %f102, %f107;
	add.f32 	%f109, %f106, %f108;
	mov.f32 	%f110, 0f3EE8BA2E;
	mul.rn.f32 	%f111, %f110, %f107;
	neg.f32 	%f112, %f111;
	fma.rn.f32 	%f113, %f110, %f107, %f112;
	fma.rn.f32 	%f114, %f110, %f109, %f113;
	mov.f32 	%f115, 0f00000000;
	fma.rn.f32 	%f116, %f115, %f107, %f114;
	add.rn.f32 	%f117, %f111, %f116;
	neg.f32 	%f118, %f117;
	add.rn.f32 	%f119, %f111, %f118;
	add.rn.f32 	%f120, %f119, %f116;
	mov.b32 	 %r13, %f117;
	setp.eq.s32	%p6, %r13, 1118925336;
	add.s32 	%r14, %r13, -1;
	mov.b32 	 %f121, %r14;
	add.f32 	%f122, %f120, 0f37000000;
	selp.f32	%f123, %f121, %f117, %p6;
	selp.f32	%f6, %f122, %f120, %p6;
	mul.f32 	%f124, %f123, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f125, %f124;
	mov.f32 	%f126, 0fBF317200;
	fma.rn.f32 	%f127, %f125, %f126, %f123;
	mov.f32 	%f128, 0fB5BFBE8E;
	fma.rn.f32 	%f129, %f125, %f128, %f127;
	mul.f32 	%f130, %f129, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f131, %f130;
	add.f32 	%f132, %f125, 0f00000000;
	ex2.approx.f32 	%f133, %f132;
	mul.f32 	%f134, %f131, %f133;
	setp.lt.f32	%p7, %f123, 0fC2D20000;
	selp.f32	%f135, 0f00000000, %f134, %p7;
	setp.gt.f32	%p8, %f123, 0f42D20000;
	selp.f32	%f331, 0f7F800000, %f135, %p8;
	setp.eq.f32	%p9, %f331, 0f7F800000;
	@%p9 bra 	BB2_2;

	fma.rn.f32 	%f331, %f331, %f6, %f331;

BB2_2:
	mov.f32 	%f330, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f329, %f330;
	fma.rn.f32 	%f328, %f329, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f327, %f328;
	setp.lt.f32	%p10, %f1, 0f00000000;
	setp.eq.f32	%p11, %f327, 0f3F800000;
	and.pred  	%p1, %p10, %p11;
	mov.b32 	 %r15, %f331;
	xor.b32  	%r16, %r15, -2147483648;
	mov.b32 	 %f136, %r16;
	selp.f32	%f333, %f136, %f331, %p1;
	setp.eq.f32	%p12, %f1, 0f00000000;
	@%p12 bra 	BB2_5;
	bra.uni 	BB2_3;

BB2_5:
	add.f32 	%f139, %f1, %f1;
	selp.f32	%f333, %f139, 0f00000000, %p11;
	bra.uni 	BB2_6;

BB2_3:
	setp.geu.f32	%p13, %f1, 0f00000000;
	@%p13 bra 	BB2_6;

	mov.f32 	%f326, 0f3EE8BA2E;
	cvt.rzi.f32.f32	%f138, %f326;
	setp.neu.f32	%p14, %f138, 0f3EE8BA2E;
	selp.f32	%f333, 0f7FFFFFFF, %f333, %p14;

BB2_6:
	abs.f32 	%f303, %f1;
	add.f32 	%f140, %f303, 0f3EE8BA2E;
	mov.b32 	 %r17, %f140;
	setp.lt.s32	%p16, %r17, 2139095040;
	@%p16 bra 	BB2_11;

	abs.f32 	%f324, %f1;
	setp.gtu.f32	%p17, %f324, 0f7F800000;
	@%p17 bra 	BB2_10;
	bra.uni 	BB2_8;

BB2_10:
	add.f32 	%f333, %f1, 0f3EE8BA2E;
	bra.uni 	BB2_11;

BB2_8:
	abs.f32 	%f325, %f1;
	setp.neu.f32	%p18, %f325, 0f7F800000;
	@%p18 bra 	BB2_11;

	selp.f32	%f333, 0fFF800000, 0f7F800000, %p1;

BB2_11:
	mov.f32 	%f312, 0fB5BFBE8E;
	mov.f32 	%f311, 0fBF317200;
	mov.f32 	%f310, 0f00000000;
	mov.f32 	%f309, 0f35BFBE8E;
	mov.f32 	%f308, 0f3F317200;
	mov.f32 	%f307, 0f3DAAAABD;
	mov.f32 	%f306, 0f3C4CAF63;
	mov.f32 	%f305, 0f3B18F0FE;
	mov.f32 	%f304, 0f3EE8BA2E;
	abs.f32 	%f17, %f2;
	setp.lt.f32	%p19, %f17, 0f00800000;
	mul.f32 	%f143, %f17, 0f4B800000;
	selp.f32	%f144, 0fC3170000, 0fC2FE0000, %p19;
	selp.f32	%f145, %f143, %f17, %p19;
	mov.b32 	 %r18, %f145;
	and.b32  	%r19, %r18, 8388607;
	or.b32  	%r20, %r19, 1065353216;
	mov.b32 	 %f146, %r20;
	shr.u32 	%r21, %r18, 23;
	cvt.rn.f32.u32	%f147, %r21;
	add.f32 	%f148, %f144, %f147;
	setp.gt.f32	%p20, %f146, 0f3FB504F3;
	mul.f32 	%f149, %f146, 0f3F000000;
	add.f32 	%f150, %f148, 0f3F800000;
	selp.f32	%f151, %f149, %f146, %p20;
	selp.f32	%f152, %f150, %f148, %p20;
	add.f32 	%f153, %f151, 0fBF800000;
	add.f32 	%f142, %f151, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f141,%f142;
	// inline asm
	add.f32 	%f154, %f153, %f153;
	mul.f32 	%f155, %f141, %f154;
	mul.f32 	%f156, %f155, %f155;
	fma.rn.f32 	%f159, %f305, %f156, %f306;
	fma.rn.f32 	%f161, %f159, %f156, %f307;
	mul.rn.f32 	%f162, %f161, %f156;
	mul.rn.f32 	%f163, %f162, %f155;
	sub.f32 	%f164, %f153, %f155;
	neg.f32 	%f165, %f155;
	add.f32 	%f166, %f164, %f164;
	fma.rn.f32 	%f167, %f165, %f153, %f166;
	mul.rn.f32 	%f168, %f141, %f167;
	add.f32 	%f169, %f163, %f155;
	sub.f32 	%f170, %f155, %f169;
	add.f32 	%f171, %f163, %f170;
	add.f32 	%f172, %f168, %f171;
	add.f32 	%f173, %f169, %f172;
	sub.f32 	%f174, %f169, %f173;
	add.f32 	%f175, %f172, %f174;
	mul.rn.f32 	%f177, %f152, %f308;
	mul.rn.f32 	%f179, %f152, %f309;
	add.f32 	%f180, %f177, %f173;
	sub.f32 	%f181, %f177, %f180;
	add.f32 	%f182, %f173, %f181;
	add.f32 	%f183, %f175, %f182;
	add.f32 	%f184, %f179, %f183;
	add.f32 	%f185, %f180, %f184;
	sub.f32 	%f186, %f180, %f185;
	add.f32 	%f187, %f184, %f186;
	mul.rn.f32 	%f189, %f304, %f185;
	neg.f32 	%f190, %f189;
	fma.rn.f32 	%f191, %f304, %f185, %f190;
	fma.rn.f32 	%f192, %f304, %f187, %f191;
	fma.rn.f32 	%f194, %f310, %f185, %f192;
	add.rn.f32 	%f195, %f189, %f194;
	neg.f32 	%f196, %f195;
	add.rn.f32 	%f197, %f189, %f196;
	add.rn.f32 	%f198, %f197, %f194;
	mov.b32 	 %r22, %f195;
	setp.eq.s32	%p21, %r22, 1118925336;
	add.s32 	%r23, %r22, -1;
	mov.b32 	 %f199, %r23;
	add.f32 	%f200, %f198, 0f37000000;
	selp.f32	%f201, %f199, %f195, %p21;
	selp.f32	%f18, %f200, %f198, %p21;
	mul.f32 	%f202, %f201, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f203, %f202;
	fma.rn.f32 	%f205, %f203, %f311, %f201;
	fma.rn.f32 	%f207, %f203, %f312, %f205;
	mul.f32 	%f208, %f207, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f209, %f208;
	add.f32 	%f210, %f203, 0f00000000;
	ex2.approx.f32 	%f211, %f210;
	mul.f32 	%f212, %f209, %f211;
	setp.lt.f32	%p22, %f201, 0fC2D20000;
	selp.f32	%f213, 0f00000000, %f212, %p22;
	setp.gt.f32	%p23, %f201, 0f42D20000;
	selp.f32	%f334, 0f7F800000, %f213, %p23;
	setp.eq.f32	%p24, %f334, 0f7F800000;
	@%p24 bra 	BB2_13;

	fma.rn.f32 	%f334, %f334, %f18, %f334;

BB2_13:
	setp.lt.f32	%p25, %f2, 0f00000000;
	and.pred  	%p2, %p25, %p11;
	mov.b32 	 %r24, %f334;
	xor.b32  	%r25, %r24, -2147483648;
	mov.b32 	 %f214, %r25;
	selp.f32	%f336, %f214, %f334, %p2;
	setp.eq.f32	%p27, %f2, 0f00000000;
	@%p27 bra 	BB2_16;
	bra.uni 	BB2_14;

BB2_16:
	add.f32 	%f217, %f2, %f2;
	selp.f32	%f336, %f217, 0f00000000, %p11;
	bra.uni 	BB2_17;

BB2_14:
	setp.geu.f32	%p28, %f2, 0f00000000;
	@%p28 bra 	BB2_17;

	mov.f32 	%f323, 0f3EE8BA2E;
	cvt.rzi.f32.f32	%f216, %f323;
	setp.neu.f32	%p29, %f216, 0f3EE8BA2E;
	selp.f32	%f336, 0f7FFFFFFF, %f336, %p29;

BB2_17:
	add.f32 	%f218, %f17, 0f3EE8BA2E;
	mov.b32 	 %r26, %f218;
	setp.lt.s32	%p31, %r26, 2139095040;
	@%p31 bra 	BB2_22;

	setp.gtu.f32	%p32, %f17, 0f7F800000;
	@%p32 bra 	BB2_21;
	bra.uni 	BB2_19;

BB2_21:
	add.f32 	%f336, %f2, 0f3EE8BA2E;
	bra.uni 	BB2_22;

BB2_19:
	setp.neu.f32	%p33, %f17, 0f7F800000;
	@%p33 bra 	BB2_22;

	selp.f32	%f336, 0fFF800000, 0f7F800000, %p2;

BB2_22:
	mov.f32 	%f321, 0fB5BFBE8E;
	mov.f32 	%f320, 0fBF317200;
	mov.f32 	%f319, 0f00000000;
	mov.f32 	%f318, 0f35BFBE8E;
	mov.f32 	%f317, 0f3F317200;
	mov.f32 	%f316, 0f3DAAAABD;
	mov.f32 	%f315, 0f3C4CAF63;
	mov.f32 	%f314, 0f3B18F0FE;
	mov.f32 	%f313, 0f3EE8BA2E;
	abs.f32 	%f29, %f3;
	setp.lt.f32	%p34, %f29, 0f00800000;
	mul.f32 	%f221, %f29, 0f4B800000;
	selp.f32	%f222, 0fC3170000, 0fC2FE0000, %p34;
	selp.f32	%f223, %f221, %f29, %p34;
	mov.b32 	 %r27, %f223;
	and.b32  	%r28, %r27, 8388607;
	or.b32  	%r29, %r28, 1065353216;
	mov.b32 	 %f224, %r29;
	shr.u32 	%r30, %r27, 23;
	cvt.rn.f32.u32	%f225, %r30;
	add.f32 	%f226, %f222, %f225;
	setp.gt.f32	%p35, %f224, 0f3FB504F3;
	mul.f32 	%f227, %f224, 0f3F000000;
	add.f32 	%f228, %f226, 0f3F800000;
	selp.f32	%f229, %f227, %f224, %p35;
	selp.f32	%f230, %f228, %f226, %p35;
	add.f32 	%f231, %f229, 0fBF800000;
	add.f32 	%f220, %f229, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f219,%f220;
	// inline asm
	add.f32 	%f232, %f231, %f231;
	mul.f32 	%f233, %f219, %f232;
	mul.f32 	%f234, %f233, %f233;
	fma.rn.f32 	%f237, %f314, %f234, %f315;
	fma.rn.f32 	%f239, %f237, %f234, %f316;
	mul.rn.f32 	%f240, %f239, %f234;
	mul.rn.f32 	%f241, %f240, %f233;
	sub.f32 	%f242, %f231, %f233;
	neg.f32 	%f243, %f233;
	add.f32 	%f244, %f242, %f242;
	fma.rn.f32 	%f245, %f243, %f231, %f244;
	mul.rn.f32 	%f246, %f219, %f245;
	add.f32 	%f247, %f241, %f233;
	sub.f32 	%f248, %f233, %f247;
	add.f32 	%f249, %f241, %f248;
	add.f32 	%f250, %f246, %f249;
	add.f32 	%f251, %f247, %f250;
	sub.f32 	%f252, %f247, %f251;
	add.f32 	%f253, %f250, %f252;
	mul.rn.f32 	%f255, %f230, %f317;
	mul.rn.f32 	%f257, %f230, %f318;
	add.f32 	%f258, %f255, %f251;
	sub.f32 	%f259, %f255, %f258;
	add.f32 	%f260, %f251, %f259;
	add.f32 	%f261, %f253, %f260;
	add.f32 	%f262, %f257, %f261;
	add.f32 	%f263, %f258, %f262;
	sub.f32 	%f264, %f258, %f263;
	add.f32 	%f265, %f262, %f264;
	mul.rn.f32 	%f267, %f313, %f263;
	neg.f32 	%f268, %f267;
	fma.rn.f32 	%f269, %f313, %f263, %f268;
	fma.rn.f32 	%f270, %f313, %f265, %f269;
	fma.rn.f32 	%f272, %f319, %f263, %f270;
	add.rn.f32 	%f273, %f267, %f272;
	neg.f32 	%f274, %f273;
	add.rn.f32 	%f275, %f267, %f274;
	add.rn.f32 	%f276, %f275, %f272;
	mov.b32 	 %r31, %f273;
	setp.eq.s32	%p36, %r31, 1118925336;
	add.s32 	%r32, %r31, -1;
	mov.b32 	 %f277, %r32;
	add.f32 	%f278, %f276, 0f37000000;
	selp.f32	%f279, %f277, %f273, %p36;
	selp.f32	%f30, %f278, %f276, %p36;
	mul.f32 	%f280, %f279, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f281, %f280;
	fma.rn.f32 	%f283, %f281, %f320, %f279;
	fma.rn.f32 	%f285, %f281, %f321, %f283;
	mul.f32 	%f286, %f285, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f287, %f286;
	add.f32 	%f288, %f281, 0f00000000;
	ex2.approx.f32 	%f289, %f288;
	mul.f32 	%f290, %f287, %f289;
	setp.lt.f32	%p37, %f279, 0fC2D20000;
	selp.f32	%f291, 0f00000000, %f290, %p37;
	setp.gt.f32	%p38, %f279, 0f42D20000;
	selp.f32	%f337, 0f7F800000, %f291, %p38;
	setp.eq.f32	%p39, %f337, 0f7F800000;
	@%p39 bra 	BB2_24;

	fma.rn.f32 	%f337, %f337, %f30, %f337;

BB2_24:
	setp.lt.f32	%p40, %f3, 0f00000000;
	and.pred  	%p3, %p40, %p11;
	mov.b32 	 %r33, %f337;
	xor.b32  	%r34, %r33, -2147483648;
	mov.b32 	 %f292, %r34;
	selp.f32	%f339, %f292, %f337, %p3;
	setp.eq.f32	%p42, %f3, 0f00000000;
	@%p42 bra 	BB2_27;
	bra.uni 	BB2_25;

BB2_27:
	add.f32 	%f295, %f3, %f3;
	selp.f32	%f339, %f295, 0f00000000, %p11;
	bra.uni 	BB2_28;

BB2_25:
	setp.geu.f32	%p43, %f3, 0f00000000;
	@%p43 bra 	BB2_28;

	mov.f32 	%f322, 0f3EE8BA2E;
	cvt.rzi.f32.f32	%f294, %f322;
	setp.neu.f32	%p44, %f294, 0f3EE8BA2E;
	selp.f32	%f339, 0f7FFFFFFF, %f339, %p44;

BB2_28:
	add.f32 	%f296, %f29, 0f3EE8BA2E;
	mov.b32 	 %r35, %f296;
	setp.lt.s32	%p46, %r35, 2139095040;
	@%p46 bra 	BB2_33;

	setp.gtu.f32	%p47, %f29, 0f7F800000;
	@%p47 bra 	BB2_32;
	bra.uni 	BB2_30;

BB2_32:
	add.f32 	%f339, %f3, 0f3EE8BA2E;
	bra.uni 	BB2_33;

BB2_30:
	setp.neu.f32	%p48, %f29, 0f7F800000;
	@%p48 bra 	BB2_33;

	selp.f32	%f339, 0fFF800000, 0f7F800000, %p3;

BB2_33:
	mov.u64 	%rd22, 0;
	mov.u32 	%r46, 4;
	mov.u32 	%r45, 2;
	mul.f32 	%f297, %f333, 0f437F0000;
	setp.eq.f32	%p49, %f1, 0f3F800000;
	selp.f32	%f298, 0f437F0000, %f297, %p49;
	mul.f32 	%f299, %f336, 0f437F0000;
	setp.eq.f32	%p50, %f2, 0f3F800000;
	selp.f32	%f300, 0f437F0000, %f299, %p50;
	mul.f32 	%f301, %f339, 0f437F0000;
	setp.eq.f32	%p51, %f3, 0f3F800000;
	selp.f32	%f302, 0f437F0000, %f301, %p51;
	ld.global.v2.u32 	{%r38, %r39}, [launchID2];
	cvt.u64.u32	%rd17, %r38;
	cvt.u64.u32	%rd18, %r39;
	mov.u64 	%rd21, screenBuffer;
	cvta.global.u64 	%rd16, %rd21;
	// inline asm
	call (%rd15), _rt_buffer_get_64, (%rd16, %r45, %r46, %rd17, %rd18, %rd22, %rd22);
	// inline asm
	cvt.rzi.u32.f32	%r42, %f298;
	cvt.rzi.u32.f32	%r43, %f300;
	cvt.rzi.u32.f32	%r44, %f302;
	cvt.u16.u32	%rs1, %r44;
	cvt.u16.u32	%rs2, %r43;
	cvt.u16.u32	%rs3, %r42;
	mov.u16 	%rs4, 255;
	st.v4.u8 	[%rd15], {%rs3, %rs2, %rs1, %rs4};
	ret;
}


